[{"C:\\Users\\user\\Documents\\GitHub\\Movie-Crud\\src\\index.js":"1","C:\\Users\\user\\Documents\\GitHub\\Movie-Crud\\src\\App.js":"2","C:\\Users\\user\\Documents\\GitHub\\Movie-Crud\\src\\firebase.js":"3","C:\\Users\\user\\Documents\\GitHub\\Movie-Crud\\src\\components\\MovieForm.js":"4","C:\\Users\\user\\Documents\\GitHub\\Movie-Crud\\src\\components\\Movies.js":"5"},{"size":229,"mtime":1606414905743,"results":"6","hashOfConfig":"7"},{"size":192,"mtime":1606418773514,"results":"8","hashOfConfig":"7"},{"size":598,"mtime":1606418086546,"results":"9","hashOfConfig":"7"},{"size":1958,"mtime":1606424699576,"results":"10","hashOfConfig":"7"},{"size":3770,"mtime":1606424813393,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g81wf9",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Documents\\GitHub\\Movie-Crud\\src\\index.js",[],"C:\\Users\\user\\Documents\\GitHub\\Movie-Crud\\src\\App.js",[],"C:\\Users\\user\\Documents\\GitHub\\Movie-Crud\\src\\firebase.js",[],"C:\\Users\\user\\Documents\\GitHub\\Movie-Crud\\src\\components\\MovieForm.js",["23","24","25"],"import React, { useState, useEffect } from 'react';\r\n\r\nconst MovieForm = (props) => {\r\n    const initialFieldValues = {\r\n        fullName: '',\r\n        date:   '',\r\n        review: ''\r\n    }\r\n\r\n    var [values, setValues] = useState(initialFieldValues)\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.currentId == '')\r\n            setValues({ ...initialFieldValues })\r\n        else\r\n            setValues({\r\n                ...props.movieObjects[props.currentId]\r\n            })\r\n    }, [props.currentId, props.movieObjects])\r\n\r\n    const handleInputChange = e => {\r\n        var { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault()\r\n        props.addOrEdit(values);\r\n    }\r\n\r\n    return (\r\n        <form autoComplete=\"off\" onSubmit={handleFormSubmit}>\r\n            <div className=\"form-group input-group\">\r\n                <input className=\"form-control\" name=\"fullName\" placeholder=\"Movie Name\"\r\n                    value={values.fullName}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </div>\r\n            <div className=\"form-group input-group\">\r\n                <input className=\"form-control\" name=\"date\" placeholder=\"Year Released\"\r\n                    value={values.date}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <textarea className=\"form-control\" name=\"review\" placeholder=\"Leave A Review\"\r\n                    value={values.review}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"submit\" value={props.currentId == \"\" ? \"Add  Movie\" : \"Update\"} className=\"btn btn-primary btn-block\" />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default MovieForm;","C:\\Users\\user\\Documents\\GitHub\\Movie-Crud\\src\\components\\Movies.js",["26","27"],{"ruleId":"28","severity":1,"message":"29","line":14,"column":29,"nodeType":"30","messageId":"31","endLine":14,"endColumn":31},{"ruleId":"32","severity":1,"message":"33","line":20,"column":8,"nodeType":"34","endLine":20,"endColumn":45,"suggestions":"35"},{"ruleId":"28","severity":1,"message":"29","line":56,"column":61,"nodeType":"30","messageId":"31","endLine":56,"endColumn":63},{"ruleId":"36","severity":1,"message":"37","line":85,"column":45,"nodeType":"38","endLine":85,"endColumn":115},{"ruleId":"36","severity":1,"message":"37","line":88,"column":45,"nodeType":"38","endLine":88,"endColumn":110},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialFieldValues'. Either include it or remove the dependency array.","ArrayExpression",["39"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"40","fix":"41"},"Update the dependencies array to be: [initialFieldValues, props.currentId, props.movieObjects]",{"range":"42","text":"43"},[485,522],"[initialFieldValues, props.currentId, props.movieObjects]"]